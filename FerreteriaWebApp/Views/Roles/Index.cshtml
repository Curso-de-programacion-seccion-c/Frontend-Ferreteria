@model List<FerreteriaWebApp.Models.RolesModel>

@{
    ViewBag.Title = "Index";
}

<h1>Roles</h1>
@Html.AntiForgeryToken()

<input type="hidden" name="__RequestVerificationToken" value="@HttpContext.Current.Request.Cookies["__RequestVerificationToken"]?.Value" />

<!--BÓTÓN DE AGREGAR Roles-->
<button id="btn-agregar-rol" class="btn btn-outline-success mb-3">
    <i class="fa fa-plus"></i> Agregar Rol
</button>

<!--TABLA-->
<table class="table table-striped table-bordered table-hover table-striped-columns">
    <!--ENCABEZADO DE LA TABLA-->
    <thead class="bg-warning text-dark">
        <tr>
            <th>ID</th>
            <th>Rol</th>
            <th>Sueldo</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <!--CUERPO DE LA TABLA-->
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.IdRol</td>
                <td>@item.Nombre</td>
                <td>@item.Sueldo</td>
                <!--BÓTÓN EDITAR-->
                <td>
                    <button class="btn btn-sm btn-info edit-btn"
                            data-id="@item.IdRol"
                            data-nombre="@item.Nombre"
                            data-sueldo="@item.Sueldo">
                        <i class="fa fa-pen"></i>
                    </button>
                    <!--BÓTÓN DE ELIMINAR-->
                    <button class="btn btn-sm btn-danger delete-btn"
                            data-id="@item.IdRol"
                            data-nombre="@item.Nombre"
                            data-sueldo="@item.Sueldo">
                        <i class="fa fa-trash"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    // Primero carga el HTML y antes de ejecutar el script
    document.addEventListener("DOMContentLoaded", function () {
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

        //<input id="swal-id" class="swal2-input" placeholder="Id">
        // AGREGAR ARTÍCULO
        document.getElementById("btn-agregar-rol").addEventListener("click", function () {
            Swal.fire({
                title: 'Agregar Nuevo Rol',
                html: `
                    <input id="swal-nombre" class="swal2-input" placeholder="Nombre" />
                    <input id="swal-sueldo" class="swal2-input" placeholder="Sueldo" />
                `,
                showCancelButton: true,
                confirmButtonText: 'Agregar',
                cancelButtonText: 'Cancelar',
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-secondary'
                },
                buttonsStyling: false,
                preConfirm: () => {
                    /*                    const code = parseInt(document.getElementById('swal-id').value);*/
                    const nombre = document.getElementById('swal-nombre').value.trim();
                    const sueldo = document.getElementById('swal-sueldo').value.trim();
                    if (!nombre || !sueldo) {
                        Swal.showValidationMessage("Nombre y sueldo son obligatorios.");
                        return false;
                    }
                    return {
                        nombre: nombre,
                        sueldo: parseFloat(document.getElementById('swal-sueldo').value),
                    };
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/Roles/AgregarRol', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({
                            Nombre: result.value.nombre,
                            Sueldo: result.value.sueldo,
                        })
                    }).then(async response => {
                        if (response.ok) {
                            Swal.fire('Agregado', 'El Rol se agregó exitosamente.', 'success')
                                .then(() => location.reload());
                        } else {
                            const errorText = await response.text();
                            Swal.fire('Error', `No se pudo agregar: ${errorText}`, 'error');
                        }
                    });
                }
            });
        });


        // EDITAR
        $(document).ready(function () {
            $(".edit-btn").each(function () {
                $(this).on("click", function () {
                    const id = $(this).data("id");
                    const nombre = $(this).data("nombre");
                    const sueldo = $(this).data("sueldo");

                    Swal.fire({
                        title: 'Editar Rol',
                        html: `
                    <input id="swal-nombre" class="swal2-input" placeholder="Nombre" value="${nombre}">
                    <input id="swal-sueldo" class="swal2-input" placeholder="Sueldo" value="${sueldo}">
                `,
                        showCancelButton: true,
                        confirmButtonText: 'Guardar',
                        preConfirm: () => {
                            return {
                                id: parseInt(id),
                                nombre: $('#swal-nombre').val(),
                                sueldo: parseFloat($('#swal-sueldo').val())
                            };
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch('/Roles/EditarRol', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                },
                                body: JSON.stringify({
                                    IdRol: result.value.id,
                                    Nombre: result.value.nombre,
                                    Sueldo: result.value.sueldo,
                                })
                            }).then(async response => {
                                if (response.ok) {
                                    Swal.fire('Actualizado', 'El artículo ha sido modificado.', 'success').then(() => {
                                        debugger;
                                        const row = $(`button[data-id="${result.value.id}"]`).closest('tr');
                                        row.children().eq(1).text(result.value.nombre);
                                        row.children().eq(2).text(result.value.sueldo.toFixed(2));
                                        debugger;

                                        const editBtn = row.find('.edit-btn').data({
                                            nombre: result.value.nombre,
                                            sueldo: result.value.sueldo,
                                        });
                                    });
                                } else {
                                    const errorText = await response.text();
                                    Swal.fire('Error', `No se pudo actualizar: ${errorText}`, 'error');
                                }
                            });
                        }
                    });
                });
            });
        });

        // ELIMINAR
        const deleteButtons = document.querySelectorAll(".delete-btn");
        deleteButtons.forEach(button => {
            button.addEventListener("click", function () {
                const id = this.dataset.id;
                const nombre = this.dataset.nombre;
                const sueldo = this.dataset.sueldo;

                Swal.fire({
                    title: '¿Estás seguro?',
                    text: `¿Deseas eliminar el rol "${nombre}"?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/Roles/EliminarRol', { //Cambiar por la ruta
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                ...(token && { 'RequestVerificationToken': token })
                            },
                            body: JSON.stringify({ IdRol: parseInt(id) })
                        }).then(async response => {
                            console.log(response);
                            if (response.ok) {
                                Swal.fire('Eliminado', `El rol "${nombre}" ha sido eliminado.`, 'success')
                                    .then(() => {
                                        const row = document.querySelector(`button[data-id="${id}"]`).closest('tr');
                                        row.remove();
                                    });
                            } else {
                                const errorText = await response.text();
                                Swal.fire('Error', `No se pudo eliminar: ${errorText}`, 'error');
                            }
                        });
                    }
                });
            });
        });

    });
</script>